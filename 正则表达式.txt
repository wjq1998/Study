正则表达式是用来匹配字符串中字符组合的模式
正则表达式作用
  表单验证(匹配)
  过滤敏感词(替换)
  字符串中提取我们想要的部分(提取)

正则表达式语法
  let 变量名 = /表达式/
  比如:let reg = /前端/ reg里面存的是对象
  
  判断是否有符合规则的字符串

    test()方法 用来查看正则表达式与指定的字符串是否匹配

    regObj.test(被检测的字符) 返回值为布尔值

exec()方法 在一个指定字符串中执行一个搜索匹配

  regObj.exec(被检测的字符)

  如果匹配成功,返回一个数组,否则返回一个null

元字符
  边界符
    ^ 表示匹配行首的文本
    $ 表示匹配行尾的文本

    两个一起使用则表示精确匹配
    /^哈/以哈开头
    /哈$/以哈结尾
    /^哈$/精确匹配,必须只有一个哈,所以为false

  量词
    用来设定某个模式出现的次数
      /a*/ 表示a可以出现>=0次
      /a+/ 表示a至少出现一次
      /a?/ 表示a出现一次或零次

      a{n} a只能出现n次
      a{n,} a只能出现n次或更多
      a{n,m} a只能出现n到m次

  字符类
    [abc] 只要包含a,b,c中任何一个都为true
    若前后加了边界符,如/^[abc]$/,则只能选a,b,c其中一个
    连字符
      [a-z] 26个英文字母任何一个
      [a-zA-Z] 26个英文(不区分大小写)字母任何一个
      [a-zA-Z0-9] 26个英文(不区分大小写)字母任何一个以及数字

      在[]中开头加上^表示取反

      .表示除换行符之外的任何单个字符

      预定义:
        \d 匹配数字
        \D 匹配除了数字外的字符
        \w 匹配任何字母,数字和下划线
        \W 排除字母,数字,下划线
        \s 匹配空格(包括换行符,制表符,空格符等)
        \S 匹配非空格(包括换行符,制表符,空格符等)

修饰符
  主要用于约束正则表达式中的某些行为
    语法:/表达式/修饰符
    
    i是单词ignore的缩写,正则匹配时不区分大小写
    g是单词global的缩写,匹配所有满足正则表达式的结果
      比如用字符串.replace(/正则表达式/,'替换的文本')来替换文本,只能替换第一个,如果用了g就可以替换所有目标

