3.
    原生JS和jQuery入口函数的加载模式不同
    原生JS会等到DOM元素加载完毕，并且图片也加载完毕才会执行
    jQu中y会等到DOM元素加载完毕，但不会等到图片也加载完毕就会执行

    原生的JS如果编写了多个入口函数，后面编写的会覆盖前面编写的
    jQuery中编写多个入口函数，后面的不会覆盖前面的
4.
    JQ的四种入口写法
        1.$(document).ready(function(){})
        2.jQuery(document).ready(function(){})
        3.$(function(){})
        4.jQuery(function(){})
5.
    1.释放$的使用权
        注意点：释放操作必须在编写其它jQuery代码之前编写
        释放之后就不能再使用$，改为使用jQuery
        jQuery.noConflict()
    2.自定义一个访问符号
        var nj=jQuery.noConflict();
6.
7.
    什么是jQuery对象
        jQuery对象是一个伪数组
    什么是伪数组？
        有0到length-1的属性，并且有length属性，如{0:1,1:3,2:5,length:4};
8.
    直接添加给类的就是静态方法
        静态方法通过类直接调用
    实例方法通过类的实例来调用
9.
    jQuery的each方法可以遍历数组，格式：$.each(obj,function(index,value){})
10.
    利用原生JS的map方法遍历
        第一个参数：当前遍历到的元素
        第二个参数：当前遍历到的索引
        第三个参数：当前被遍历的数组
        arr.map(function (value,index,array){
            console.log(index,value,array)
        })

    jQuery的map方法遍历
        第一个参数：遍历到的元素
        第二个参数：遍历到的索引
        注意点：
        和jQuery中的each静态方法一样，map静态方法也可以遍历伪数组
        $map(arr,function (value,index){
            console.log(index,value);
        })
    
    jQuery中的each静态方法和map静态方法的区别：
        each静态方法默认的返回值就是，遍历谁就返回谁
        map静态方法默认的返回值是一个空数组
        each静态方法不支持在回调函数中对遍历的数组进行处理
        map静态方法可以在回调函数中通过return.对遍历的数组进行处理，然后生成一个新的数组返回
11.
    $.trim（）
        作用：去除字符串两端的空格
        参数：需要去除空格的字符串
        返回值：去除空格之后的字符串
    
    $.isWindow()
        作用：判断传入的对象时候是window对象
        返回值：true/false

    $.isArray ()
        作用：判断传入的对象是否是真数组
        返回值：true/false
    
    $.isFunction()
        作用：判断传入的对象是否是一个函数
        返回值：true/false
        注意点：
        jQuery框架本质上是一个函数
12.
    $.holdReady(true) 作用：暂停ready执行
13.
    开发环境的内容，无视
14.
    jQuery内容选择器
        :empty 作用：找到既没有文本内容也没有子元素的指定元素
        :parent 作用：找到有文本内容或有子元素的指定元素
        :contains(text) 作用：找到包含指定文本内容的指定元素
        :has(selector) 作用：找到包含指定子元素的指定元素
15.
    属性和属性节点，有空回来看
16.
    attr (name|pro|key,val|fn)
        作用：获取或者设置属性节点的值
        可以传递一个参数，也可以传递两个参数
        如果传递一个参数，代表获取属性节点的值
        如果传递两个参数，代表设置属性节点的值
        注意点：
            如果是获取：无论找到多少个元素，都只会返回第一个元素指定的属性节点的值
            如果是设置：找到多少个元素就会设置多少个元素
            如果是设置：如果设置的属性节点不存在，那么系统会自动新增

    removeAttr(name)
        删除属性节点
        注意点：
            会删除所有找到元素指定的属性节点
17.
    prop方法
        特点和attr方法一致,但可以操作属性
    removeProp方法
        特点和removeAttr方法一致,但可以操作属性
    注意点：
        prop方法不仅能够操作属性，他还能操作属性节点
        官方推荐在操作属性节点时，具有true和false两个属性的属性节点，如
    schecked,selected或者disabled使用prop(),其他的使用attr（）
19.
    addClass(class|fn)
        作用：添加一个类
        如果要添加多个，多个类名之间用空格隔开即可
    removeClass ([class|fn)
        作用：删除一个类
        如果想删除多个，多个类名之间用空格隔开即可
    toggleClass(class|fn[,sw])
        作用：切换类
        有就删除，没有就添加
20.
    1.html([val|fn])
        和原生JS中的innerHTL一模一样
    2.text ([val|fn])
        和原生JS中的innerText一模一样
    3.val([val|fn|arr])
        和原生JS中的value一模一样
21.
    css样式操作方式 .css()
22.
    
24.
    jQuery中有两种绑定方式
        1.eventName (fn);
            编码效率略高（因为有代码提示）/部分事件jQuery没有实现，所以不能添加
        2.on(eventName,fn)
            编码效率略低/所有s事件都可以添加
        注意点：
            可以添加多个相同或者不同类型的事件，不会覆盖
25.
    off方法如果不传递参数，会移除所有的事件
    off方法如果传递一个参数，会移除所有指定类型的事件
    off方法如果传递两个参数，会移除所有指定类型的指定事件
26.
27.
    自动触发事件
        trigger:如果利用trigger自动触发事件，会触发事件冒泡
        triggerHandler:如果利用triggerHandler自动触发事件，不会触发事件冒泡

        trigger:如果利用trigger自动触发事件，会触发默认行为
        triggerHandler:如果利用triggerHandler自动触发事件，不会触发默认行为

        如果直接给a设置trigger不会自动触发默认事件，需要给a的内容外部套上span标签，然后给span标签设置trigger
28. 
    想要自定义事件，必须满足两个条件
        1.事件必须是通过on绑定的
        2.事件必须通过trigger来触发
29.
    事件命名空间
30.
    利用trigger触发子元素带命名空间的事件，那么父元素带相同命名空间的事件也会被触发。而父元素没有命名空间的事件不会被触发
    利用trigger触发子元素不带命名空间的事件，那么子元素所有相同类型的事件和父元素所有相同类型的事件都会被触发
31.
    事件委托
    $("ul").delegate('li”，"click”，function()
32.
    事件委托练习
33.
    mouseover/mouseout事件，子元素被移入移出也会触发父元素的事件
    mouseenter/mouseleave事件，子元素被移入移出不会触发父元素的事件(推荐)

    $("father").hover(function()
        移入函数
    }function （）
        移出函数
    }):
    如果只写一个函数，则同时监听移入移出事件