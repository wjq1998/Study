ES6模块化
    在ES6模块化规范诞生之前，JavaScript社区已经尝试并提出了AMD、CMD、CommonJS(Node.js遵循)等模块化规范。

    但是，这些由社区提出的模块化标准，还是存在一定的差异性与局限性、并不是浏览器与服务器通用的模块化标准，例如：
        AMD和CMD适用于浏览器端的Javascript模块化
        CommonJS适用于服务器端的Javascript模块化

    太多的模块化规范给开发者增加了学习的难度与开发的成本。因此，大一统的ES6模块化规范诞生了！
    
    node.js中默认仅支持CommonJS模块化规范，若想基于node.js体验与学习ES6的模块化语法，可以按照如下两个步骤进行配置：
    ①确保安装了v14.15.1或更高版本的node.js
    ②在package.json(包管理文件)的根节点中添加"type":"module'"节点

    ES6的基本语法
        ES6的模块化主要包含如下3种用法：
        1.默认导出与默认导入
        2.按需导出与按需导入
        3.直接导入并执行模块中的代码

    默认导出
        格式: export default 默认导出的成员
        
        let a = 10
        let b = 20
        function show(){}

        export default {
            n1,
            show
        }